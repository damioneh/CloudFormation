{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template creates a vpc and two subnet",
  "Metadata": {},
  "Parameters": {
    "EnvName": {
        "Description": "Choose environment:",
        "Type": "String",
        "AllowedValues": [
            "Dev",
            "Stg"
          ],  
        "ConstraintDescription": "Environment must match with specified AllowedValue"
    },
    
    "VpcCIDR": {
      "Description": "Create a CIDR block for W-F VPC",
      "Type": "String",
      "Default": "10.0.0.0/16"
    },

    "PubSubCIDR": {
      "Description": "Create a CIDR block for W-F PubSub",
      "Type": "String",
      "Default": "10.0.1.0/28"
    },

    "PrvSubCIDR": {
      "Description": "Create a CIDR block for W-F PrvSub",
      "Type": "String",
      "Default": "10.0.1.20/28"
    },

    "wfKeyPair": {
      "Description": "w-f KeyPair for EC2 Instance",
      "Type": "String",
      "Default": "JJTech-KeyPair-01"
    },

    "wfImageId": {
      "Description": "NOVA Region Image Id",
      "Type": "String",
      "Default": "ami-0022f774911c1d690"
    },

    "wfInstanceType": {
      "Description": "W-F EC2 Instance Type",
      "Type": "String",
      "Default": "t2.micro"
    }
  },
  "Mappings": {
    "AWSInstanceType2Arch" : {
        "t1.micro"    : { "Arch" : "HVM64"  },
        "t2.nano"     : { "Arch" : "HVM64"  },
        "t2.micro"    : { "Arch" : "HVM64"  },
        "t2.small"    : { "Arch" : "HVM64"  },
        "t2.medium"   : { "Arch" : "HVM64"  }
    },
    "AWSRegionArch2AMI" : {
        "us-east-1"        : {"HVM64" : "ami-032930428bf1abbff", "HVMG2" : "ami-0aeb704d503081ea6"},
        "us-east-2"        : {"HVM64" : "ami-027cab9a7bf0155df", "HVMG2" : "NOT_SUPPORTED"},
        "us-west-1"        : {"HVM64" : "ami-088c153f74339f34c", "HVMG2" : "ami-0a7fc72dc0e51aa77"},
        "us-west-2"        : {"HVM64" : "ami-01fee56b22f308154", "HVMG2" : "ami-0fe84a5b4563d8f27"}
      }
    
  },
  "Conditions": {},
  "Resources": {
    "wfVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": { "Ref": "VpcCIDR" },
        "Tags": [{ "Key": "Name", "Value": "wf-vpc" }]
      }
    },

    "PubSub": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": "us-east-1a",
        "VpcId": { "Ref": "wfVPC" },
        "CidrBlock": { "Ref": "PubSubCIDR" },
        "Tags": [{ "Key": "Name", "Value": "w-f-PubSub" }]
      }
    },

    "PrvSub": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "VpcId": { "Ref": "wfVPC" },
        "CidrBlock": { "Ref": "PrvSubCIDR" },
        "Tags": [{ "Key": "Name", "Value": "w-f-PrvSub" }]
      }
    },

    "wfIGW": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [{ "Key": "Name", "Value": "wfIGW" }]
      }
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": { "Ref": "wfVPC" },
        "InternetGatewayId": { "Ref": "wfIGW" }
      }
    },

    "wfRT": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "wfVPC" },
        "Tags": [{ "Key": "Name", "Value": "wfRT" }]
      }
    },
    "wfRouteIGW": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": { "Ref": "wfRT" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": { "Ref": "wfIGW" }
      }
    },

    "wfRTAssocPub": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PubSub" },
        "RouteTableId": { "Ref": "wfRT" }
      }
    },

    "wfNAT": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": { "Fn::GetAtt": ["wfEIP", "AllocationId"] },
        "SubnetId": { "Ref": "PubSub" },
        "Tags": [{ "Key": "Name", "Value": "wfNAT" }]
      }
    },

    "wfEIP": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": { "Ref": "wfVPC" }
      }
    },

    "wfRouteNAT": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": { "Ref": "wfRT" },
        "DestinationCidrBlock": { "Ref":"PubSubCIDR"},
        "NatGatewayId": { "Ref": "wfNAT" }
      }
    },

    "wfWebSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Allow http to client host",
        "VpcId": { "Ref": "wfVPC" },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 80,
            "ToPort": 80,
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 80,
            "ToPort": 80,
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },

    "wfWebServer": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "KeyName": { "Ref": "wfKeyPair" },
        "DisableApiTermination": "false",
        "ImageId": { "Ref": "wfImageId" },
        "SubnetId": { "Ref": "PubSub" },
        "InstanceType": { "Ref": "wfInstanceType" },
        "Monitoring": "false",
        "SecurityGroupIds": [{ "Ref": "wfWebSG" }],
        "Tags": [
          {
            "Key": "Name",
            "Value": "wfEC2WebServer"
          }
        ]
      }
    }
  },
  "Outputs": {}
}
  